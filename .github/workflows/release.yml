name: "Release"

on:
    push: 
        branches: ['v[0-9]+.[0-9]+.[0-9]', 'develop', 'main', 'v[0-9]+.[0-9]+.[0-9]-hotfix[0-9]+']

jobs:
    create-tag:
        runs-on: ubuntu-latest
        if: github.ref_name != 'develop' || contains(github.event.head_commit.message, '[run ci]')
        outputs:
            version_output: ${{steps.rc_version_step.outputs.next_version}}
        steps:
            - uses: actions/checkout@v4
            - name: Install NPM deps
              run: |
                npm install
            - id: rc_version_step
              name: Get new tag name
              run: |
                git fetch --all --tags
                node ./scripts/get-next-version.js ${{github.ref_name}} >> ./next-version
                echo "next_version=$(cat ./next-version)" >> $GITHUB_OUTPUT
            - name: Write new tag name as version
              run: node ./scripts/write-version.js $(cat ./next-version)
            - name: Tag
              run: |
                git config user.name "${{github.actor}}"
                git config user.email "${{github.actor}}@users.noreply.github.com"
                git add fxmanifest.lua
                git add package.json
                node ./scripts/write-commit-message.js >> ./commit-msg
                git commit -F ./commit-msg
                git tag -a -F ./next-version $(cat ./next-version)
                git push origin tag $(cat ./next-version)
    release:
        runs-on: ubuntu-latest
        needs: create-tag
        steps:
            - uses: actions/checkout@v4
              env: 
                NEXT_VERSION: ${{needs.create-tag.outputs.version_output}}
              with:
                ref: ${{needs.create-tag.outputs.version_output}}
            - name: Clone deps
              run: |
                bash ./scripts/clone-deps.sh
            - name: Install NPM deps
              run: |
                npm install
            - name: Build
              run: |
                npm run build
            - name: Package
              run: |
                bash ./scripts/package.sh
            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                name: build
                path: build
            - name: Create release
              env: 
                NEXT_VERSION: ${{needs.create-tag.outputs.version_output}}
              run: |
                sudo apt-get install zip
                zip -r lbg-char-neo-$NEXT_VERSION.zip ./build/
            - name: Upload pre-release
              env: 
                NEXT_VERSION: ${{needs.create-tag.outputs.version_output}}
                GH_TOKEN: ${{github.token}}
              if: ${{ contains(needs.create-tag.outputs.version_output, '-rc.') || contains(needs.create-tag.outputs.version_output, '-alpha.') }}
              run: |
                gh release create $NEXT_VERSION -p --verify-tag --notes-from-tag "./lbg-char-neo-$NEXT_VERSION.zip#lbg-char-neo $NEXT_VERSION and dependencies"
            - name: Upload release
              env: 
                NEXT_VERSION: ${{needs.create-tag.outputs.version_output}}
                GH_TOKEN: ${{github.token}}
              if: ${{ !contains(needs.create-tag.outputs.version_output, '-rc.') && !contains(needs.create-tag.outputs.version_output, '-alpha.') }}
              run: |
                gh release create $NEXT_VERSION --latest --verify-tag --notes-from-tag "./lbg-char-neo-$NEXT_VERSION.zip#lbg-char-neo $NEXT_VERSION and dependencies"